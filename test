.......FFFFFFFFFFFFFFFFFFFFFFFFFFF

Failures:

  1) Game #won? returns false for a draw
     Failure/Error: expect(game.won?).to be_falsey

     NoMethodError:
       undefined method `won?' for #<Game:0x0000562daf0ab440>
     # ./spec/04_game_spec.rb:83:in `block (3 levels) in <top (required)>'

  2) Game #won? returns the correct winning combination in the case of a win
     Failure/Error: expect(game.won?).to contain_exactly(2, 5, 8)

     NoMethodError:
       undefined method `won?' for #<Game:0x0000562daf0aa108>
     # ./spec/04_game_spec.rb:92:in `block (3 levels) in <top (required)>'

  3) Game #won? isn't hard-coded
     Failure/Error: expect(game.won?).to contain_exactly(0, 1, 2)

     NoMethodError:
       undefined method `won?' for #<Game:0x0000562daf0a8e70>
     # ./spec/04_game_spec.rb:101:in `block (3 levels) in <top (required)>'

  4) Game #draw? returns true for a draw
     Failure/Error: expect(game.draw?).to be_truthy

     NoMethodError:
       undefined method `draw?' for #<Game:0x0000562daf0af158>
     # ./spec/04_game_spec.rb:110:in `block (3 levels) in <top (required)>'

  5) Game #draw? returns false for a won game
     Failure/Error: expect(game.draw?).to be_falsey

     NoMethodError:
       undefined method `draw?' for #<Game:0x0000562daf0adcb8>
     # ./spec/04_game_spec.rb:117:in `block (3 levels) in <top (required)>'

  6) Game #draw? returns false for an in-progress game
     Failure/Error: expect(game.draw?).to be_falsey

     NoMethodError:
       undefined method `draw?' for #<Game:0x0000562daf0ac778>
     # ./spec/04_game_spec.rb:124:in `block (3 levels) in <top (required)>'

  7) Game #over? returns true for a draw
     Failure/Error: expect(game.over?).to be_truthy

     NoMethodError:
       undefined method `over?' for #<Game:0x0000562daf0baa80>
     # ./spec/04_game_spec.rb:133:in `block (3 levels) in <top (required)>'

  8) Game #over? returns true for a won game
     Failure/Error: expect(game.over?).to be_truthy

     NoMethodError:
       undefined method `over?' for #<Game:0x0000562daf0b9680>
     # ./spec/04_game_spec.rb:140:in `block (3 levels) in <top (required)>'

  9) Game #over? returns false for an in-progress game
     Failure/Error: expect(game.over?).to be_falsey

     NoMethodError:
       undefined method `over?' for #<Game:0x0000562daf0b80f0>
     # ./spec/04_game_spec.rb:147:in `block (3 levels) in <top (required)>'

  10) Game #winner returns X when X won
      Failure/Error: expect(game.winner).to eq("X")

      NoMethodError:
        undefined method `winner' for #<Game:0x0000562daf0ca390>
      # ./spec/04_game_spec.rb:156:in `block (3 levels) in <top (required)>'

  11) Game #winner returns O when O won
      Failure/Error: expect(game.winner).to eq("O")

      NoMethodError:
        undefined method `winner' for #<Game:0x0000562daf0c9008>
      # ./spec/04_game_spec.rb:163:in `block (3 levels) in <top (required)>'

  12) Game #winner returns nil when no winner
      Failure/Error: expect(game.winner).to be_nil

      NoMethodError:
        undefined method `winner' for #<Game:0x0000562daf0e35c0>
      # ./spec/04_game_spec.rb:170:in `block (3 levels) in <top (required)>'

  13) Game turn makes valid moves
      Failure/Error: game.turn

      NoMethodError:
        undefined method `turn' for #<Game:0x0000562daf0e1608>
      # ./spec/04_game_spec.rb:181:in `block (3 levels) in <top (required)>'

  14) Game turn asks for input again after a failed validation
      Failure/Error: game.turn

      NoMethodError:
        undefined method `turn' for #<Game:0x0000562daf1621e0>
      # ./spec/04_game_spec.rb:191:in `block (3 levels) in <top (required)>'

  15) Game turn changes to player 2 after the first turn
      Failure/Error: game.turn

      NoMethodError:
        undefined method `turn' for #<Game:0x0000562daf176cf8>
      # ./spec/04_game_spec.rb:201:in `block (3 levels) in <top (required)>'

  16) Game play asks for players input on a turn of the game
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf179d18>
      # ./spec/04_game_spec.rb:214:in `block (3 levels) in <top (required)>'

  17) Game play checks if the game is over after every turn
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf188930>
      # ./spec/04_game_spec.rb:225:in `block (3 levels) in <top (required)>'

  18) Game play plays the first turn of the game
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1a7f38>
      # ./spec/04_game_spec.rb:235:in `block (3 levels) in <top (required)>'

  19) Game play plays the first few turns of the game
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1a41a8>
      # ./spec/04_game_spec.rb:249:in `block (3 levels) in <top (required)>'

  20) Game play checks if the game is won after every turn
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1d21e8>
      # ./spec/04_game_spec.rb:263:in `block (3 levels) in <top (required)>'

  21) Game play checks if the game is a draw after every turn
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1b3018>
      # ./spec/04_game_spec.rb:274:in `block (3 levels) in <top (required)>'

  22) Game play stops playing if someone has won
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1dd9a8>
      # ./spec/04_game_spec.rb:285:in `block (3 levels) in <top (required)>'

  23) Game play congratulates the winner X
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1f14f8>
      # ./spec/04_game_spec.rb:295:in `block (3 levels) in <top (required)>'

  24) Game play congratulates the winner O
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1fedb0>
      # ./spec/04_game_spec.rb:306:in `block (3 levels) in <top (required)>'

  25) Game play stops playing in a draw
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf1fc628>
      # ./spec/04_game_spec.rb:317:in `block (3 levels) in <top (required)>'

  26) Game play prints "Cat's Game!" on a draw
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf217360>
      # ./spec/04_game_spec.rb:328:in `block (3 levels) in <top (required)>'

  27) Game play plays through an entire game
      Failure/Error: game.play

      NoMethodError:
        undefined method `play' for #<Game:0x0000562daf214c78>
      # ./spec/04_game_spec.rb:345:in `block (3 levels) in <top (required)>'

Finished in 0.01465 seconds (files took 0.18061 seconds to load)
34 examples, 27 failures

Failed examples:

rspec ./spec/04_game_spec.rb:79 # Game #won? returns false for a draw
rspec ./spec/04_game_spec.rb:86 # Game #won? returns the correct winning combination in the case of a win
rspec ./spec/04_game_spec.rb:95 # Game #won? isn't hard-coded
rspec ./spec/04_game_spec.rb:106 # Game #draw? returns true for a draw
rspec ./spec/04_game_spec.rb:113 # Game #draw? returns false for a won game
rspec ./spec/04_game_spec.rb:120 # Game #draw? returns false for an in-progress game
rspec ./spec/04_game_spec.rb:129 # Game #over? returns true for a draw
rspec ./spec/04_game_spec.rb:136 # Game #over? returns true for a won game
rspec ./spec/04_game_spec.rb:143 # Game #over? returns false for an in-progress game
rspec ./spec/04_game_spec.rb:152 # Game #winner returns X when X won
rspec ./spec/04_game_spec.rb:159 # Game #winner returns O when O won
rspec ./spec/04_game_spec.rb:166 # Game #winner returns nil when no winner
rspec ./spec/04_game_spec.rb:175 # Game turn makes valid moves
rspec ./spec/04_game_spec.rb:184 # Game turn asks for input again after a failed validation
rspec ./spec/04_game_spec.rb:194 # Game turn changes to player 2 after the first turn
rspec ./spec/04_game_spec.rb:207 # Game play asks for players input on a turn of the game
rspec ./spec/04_game_spec.rb:217 # Game play checks if the game is over after every turn
rspec ./spec/04_game_spec.rb:228 # Game play plays the first turn of the game
rspec ./spec/04_game_spec.rb:240 # Game play plays the first few turns of the game
rspec ./spec/04_game_spec.rb:254 # Game play checks if the game is won after every turn
rspec ./spec/04_game_spec.rb:266 # Game play checks if the game is a draw after every turn
rspec ./spec/04_game_spec.rb:277 # Game play stops playing if someone has won
rspec ./spec/04_game_spec.rb:288 # Game play congratulates the winner X
rspec ./spec/04_game_spec.rb:298 # Game play congratulates the winner O
rspec ./spec/04_game_spec.rb:309 # Game play stops playing in a draw
rspec ./spec/04_game_spec.rb:320 # Game play prints "Cat's Game!" on a draw
rspec ./spec/04_game_spec.rb:331 # Game play plays through an entire game

